syntax = "proto3";

//option java_multiple_files = true;
option java_package = "group3.ssd.blockchain.p2p";
//option java_outer_classname = "Messages";

service KademliaProtocol {

  rpc ping(Ping) returns (Ping) {}

  rpc send(Message) returns (MessageResponse) {}

  rpc store(Store) returns (Store) {}

  rpc findNode(TargetID) returns (stream FoundNode) {}

  rpc findValue(TargetID) returns (stream FoundValue) {}

  rpc broadcastMessage(Broadcast) returns (BroadcastResponse) {}

}

message TargetID {
  bytes requestingNodeID = 1;
  int32 requestNodePort = 2;
  bytes targetID = 3;
}

message Ping {
  bytes nodeID = 1;
  int32 requestingNodePort = 2;
}

message Message {
  bytes sendingNodeID = 1;
  int32 sendingNodePort = 2;

  bytes message = 3;
}

message MessageResponse {
  bytes response = 1;
}

message Broadcast {
  bytes requestingNodeID = 1;
  int32 requestingNodePort = 2;

  bytes messageID = 3;
  int32 height = 4;
  bytes messageContent = 5;
}

message BroadcastResponse {
  bool seen = 1;
}

message Store {
  bytes requestingNodeID = 1;
  int32 requestingNodePort = 2;

  bytes owningNodeID = 3;
  bytes key = 4;
  bytes value = 5;
}

message FoundNode {
  bytes nodeID = 1;
  string nodeAddress = 2;
  int32 port = 3;
  int64 lastSeen = 4;
}

enum StoreKind {
  VALUE_FOUND = 0;
  NODES = 1;
}

message FoundValue {
  StoreKind valueKind = 1;
  bytes key = 2;
  bytes value = 3;
  bytes nodeID = 4;
  string nodeAddress = 5;
  int32 port = 6;
}
