// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages.proto

package group3.ssd.blockchain.p2p.grpc;

/**
 * Protobuf type {@code blockchain.Pong}
 */
public  final class Pong extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:blockchain.Pong)
    PongOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Pong.newBuilder() to construct.
  private Pong(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Pong() {
    pong_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Pong(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            pong_ = input.readBool();
            break;
          }
          case 18: {
            group3.ssd.blockchain.p2p.grpc.BlockChain.Builder subBuilder = null;
            if (blockchain_ != null) {
              subBuilder = blockchain_.toBuilder();
            }
            blockchain_ = input.readMessage(group3.ssd.blockchain.p2p.grpc.BlockChain.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(blockchain_);
              blockchain_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return group3.ssd.blockchain.p2p.grpc.BlockchainGRPCProto.internal_static_blockchain_Pong_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return group3.ssd.blockchain.p2p.grpc.BlockchainGRPCProto.internal_static_blockchain_Pong_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            group3.ssd.blockchain.p2p.grpc.Pong.class, group3.ssd.blockchain.p2p.grpc.Pong.Builder.class);
  }

  public static final int PONG_FIELD_NUMBER = 1;
  private boolean pong_;
  /**
   * <code>bool pong = 1;</code>
   */
  public boolean getPong() {
    return pong_;
  }

  public static final int BLOCKCHAIN_FIELD_NUMBER = 2;
  private group3.ssd.blockchain.p2p.grpc.BlockChain blockchain_;
  /**
   * <code>.blockchain.BlockChain blockchain = 2;</code>
   */
  public boolean hasBlockchain() {
    return blockchain_ != null;
  }
  /**
   * <code>.blockchain.BlockChain blockchain = 2;</code>
   */
  public group3.ssd.blockchain.p2p.grpc.BlockChain getBlockchain() {
    return blockchain_ == null ? group3.ssd.blockchain.p2p.grpc.BlockChain.getDefaultInstance() : blockchain_;
  }
  /**
   * <code>.blockchain.BlockChain blockchain = 2;</code>
   */
  public group3.ssd.blockchain.p2p.grpc.BlockChainOrBuilder getBlockchainOrBuilder() {
    return getBlockchain();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (pong_ != false) {
      output.writeBool(1, pong_);
    }
    if (blockchain_ != null) {
      output.writeMessage(2, getBlockchain());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (pong_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, pong_);
    }
    if (blockchain_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getBlockchain());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof group3.ssd.blockchain.p2p.grpc.Pong)) {
      return super.equals(obj);
    }
    group3.ssd.blockchain.p2p.grpc.Pong other = (group3.ssd.blockchain.p2p.grpc.Pong) obj;

    boolean result = true;
    result = result && (getPong()
        == other.getPong());
    result = result && (hasBlockchain() == other.hasBlockchain());
    if (hasBlockchain()) {
      result = result && getBlockchain()
          .equals(other.getBlockchain());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PONG_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPong());
    if (hasBlockchain()) {
      hash = (37 * hash) + BLOCKCHAIN_FIELD_NUMBER;
      hash = (53 * hash) + getBlockchain().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static group3.ssd.blockchain.p2p.grpc.Pong parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(group3.ssd.blockchain.p2p.grpc.Pong prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code blockchain.Pong}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:blockchain.Pong)
      group3.ssd.blockchain.p2p.grpc.PongOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return group3.ssd.blockchain.p2p.grpc.BlockchainGRPCProto.internal_static_blockchain_Pong_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return group3.ssd.blockchain.p2p.grpc.BlockchainGRPCProto.internal_static_blockchain_Pong_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              group3.ssd.blockchain.p2p.grpc.Pong.class, group3.ssd.blockchain.p2p.grpc.Pong.Builder.class);
    }

    // Construct using group3.ssd.blockchain.p2p.grpc.Pong.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      pong_ = false;

      if (blockchainBuilder_ == null) {
        blockchain_ = null;
      } else {
        blockchain_ = null;
        blockchainBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return group3.ssd.blockchain.p2p.grpc.BlockchainGRPCProto.internal_static_blockchain_Pong_descriptor;
    }

    @java.lang.Override
    public group3.ssd.blockchain.p2p.grpc.Pong getDefaultInstanceForType() {
      return group3.ssd.blockchain.p2p.grpc.Pong.getDefaultInstance();
    }

    @java.lang.Override
    public group3.ssd.blockchain.p2p.grpc.Pong build() {
      group3.ssd.blockchain.p2p.grpc.Pong result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public group3.ssd.blockchain.p2p.grpc.Pong buildPartial() {
      group3.ssd.blockchain.p2p.grpc.Pong result = new group3.ssd.blockchain.p2p.grpc.Pong(this);
      result.pong_ = pong_;
      if (blockchainBuilder_ == null) {
        result.blockchain_ = blockchain_;
      } else {
        result.blockchain_ = blockchainBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof group3.ssd.blockchain.p2p.grpc.Pong) {
        return mergeFrom((group3.ssd.blockchain.p2p.grpc.Pong)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(group3.ssd.blockchain.p2p.grpc.Pong other) {
      if (other == group3.ssd.blockchain.p2p.grpc.Pong.getDefaultInstance()) return this;
      if (other.getPong() != false) {
        setPong(other.getPong());
      }
      if (other.hasBlockchain()) {
        mergeBlockchain(other.getBlockchain());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      group3.ssd.blockchain.p2p.grpc.Pong parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (group3.ssd.blockchain.p2p.grpc.Pong) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean pong_ ;
    /**
     * <code>bool pong = 1;</code>
     */
    public boolean getPong() {
      return pong_;
    }
    /**
     * <code>bool pong = 1;</code>
     */
    public Builder setPong(boolean value) {
      
      pong_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool pong = 1;</code>
     */
    public Builder clearPong() {
      
      pong_ = false;
      onChanged();
      return this;
    }

    private group3.ssd.blockchain.p2p.grpc.BlockChain blockchain_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        group3.ssd.blockchain.p2p.grpc.BlockChain, group3.ssd.blockchain.p2p.grpc.BlockChain.Builder, group3.ssd.blockchain.p2p.grpc.BlockChainOrBuilder> blockchainBuilder_;
    /**
     * <code>.blockchain.BlockChain blockchain = 2;</code>
     */
    public boolean hasBlockchain() {
      return blockchainBuilder_ != null || blockchain_ != null;
    }
    /**
     * <code>.blockchain.BlockChain blockchain = 2;</code>
     */
    public group3.ssd.blockchain.p2p.grpc.BlockChain getBlockchain() {
      if (blockchainBuilder_ == null) {
        return blockchain_ == null ? group3.ssd.blockchain.p2p.grpc.BlockChain.getDefaultInstance() : blockchain_;
      } else {
        return blockchainBuilder_.getMessage();
      }
    }
    /**
     * <code>.blockchain.BlockChain blockchain = 2;</code>
     */
    public Builder setBlockchain(group3.ssd.blockchain.p2p.grpc.BlockChain value) {
      if (blockchainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blockchain_ = value;
        onChanged();
      } else {
        blockchainBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.blockchain.BlockChain blockchain = 2;</code>
     */
    public Builder setBlockchain(
        group3.ssd.blockchain.p2p.grpc.BlockChain.Builder builderForValue) {
      if (blockchainBuilder_ == null) {
        blockchain_ = builderForValue.build();
        onChanged();
      } else {
        blockchainBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.blockchain.BlockChain blockchain = 2;</code>
     */
    public Builder mergeBlockchain(group3.ssd.blockchain.p2p.grpc.BlockChain value) {
      if (blockchainBuilder_ == null) {
        if (blockchain_ != null) {
          blockchain_ =
            group3.ssd.blockchain.p2p.grpc.BlockChain.newBuilder(blockchain_).mergeFrom(value).buildPartial();
        } else {
          blockchain_ = value;
        }
        onChanged();
      } else {
        blockchainBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.blockchain.BlockChain blockchain = 2;</code>
     */
    public Builder clearBlockchain() {
      if (blockchainBuilder_ == null) {
        blockchain_ = null;
        onChanged();
      } else {
        blockchain_ = null;
        blockchainBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.blockchain.BlockChain blockchain = 2;</code>
     */
    public group3.ssd.blockchain.p2p.grpc.BlockChain.Builder getBlockchainBuilder() {
      
      onChanged();
      return getBlockchainFieldBuilder().getBuilder();
    }
    /**
     * <code>.blockchain.BlockChain blockchain = 2;</code>
     */
    public group3.ssd.blockchain.p2p.grpc.BlockChainOrBuilder getBlockchainOrBuilder() {
      if (blockchainBuilder_ != null) {
        return blockchainBuilder_.getMessageOrBuilder();
      } else {
        return blockchain_ == null ?
            group3.ssd.blockchain.p2p.grpc.BlockChain.getDefaultInstance() : blockchain_;
      }
    }
    /**
     * <code>.blockchain.BlockChain blockchain = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        group3.ssd.blockchain.p2p.grpc.BlockChain, group3.ssd.blockchain.p2p.grpc.BlockChain.Builder, group3.ssd.blockchain.p2p.grpc.BlockChainOrBuilder> 
        getBlockchainFieldBuilder() {
      if (blockchainBuilder_ == null) {
        blockchainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            group3.ssd.blockchain.p2p.grpc.BlockChain, group3.ssd.blockchain.p2p.grpc.BlockChain.Builder, group3.ssd.blockchain.p2p.grpc.BlockChainOrBuilder>(
                getBlockchain(),
                getParentForChildren(),
                isClean());
        blockchain_ = null;
      }
      return blockchainBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:blockchain.Pong)
  }

  // @@protoc_insertion_point(class_scope:blockchain.Pong)
  private static final group3.ssd.blockchain.p2p.grpc.Pong DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new group3.ssd.blockchain.p2p.grpc.Pong();
  }

  public static group3.ssd.blockchain.p2p.grpc.Pong getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Pong>
      PARSER = new com.google.protobuf.AbstractParser<Pong>() {
    @java.lang.Override
    public Pong parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Pong(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Pong> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Pong> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public group3.ssd.blockchain.p2p.grpc.Pong getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

